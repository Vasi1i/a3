# This is a basic workflow to help you get started with Actions

name: A1

# Controls when the workflow will run
on: push
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my_testing:
    runs-on: ubuntu-latest

    steps:

      - name: step Branch-name
        run: echo running on branch ${GITHUB_REF##*/}

      - name: step Checkout-code
        uses: actions/checkout@v3

      - name: step Set up Java
        uses: actions/setup-java@v3

        with:
          distribution: 'adopt'
          java-version: '17'

      - name: analysis.author
        run: echo ${{ github.actor }}

      - name: BRANCH_NAME
        run: echo BRANCH_NAME=${GITHUB_REF##*/}

      - name: SONAR_PROJECT_KEY
        run: echo SONAR_PROJECT_KEY=${GITHUB_REF##*/}

      - name: Sonarqube

        run: |
          mvn sonar:sonar -Dsonar.projectKey="cinema" -Dsonar.projectName="cinema" -Dsonar.host.url=http://31.220.85.178:9001 -Dsonar.login=${{ SONAR_TOKEN }}
        env:
          SONAR_TOKEN: sqb_0a1fc0450f85147fd59e2a74f8198c9c2a5b618b

        # run: |
        #   BRANCH_NAME=${GITHUB_REF##*/}
        #   echo ${BRANCH_NAME} ---
        #   SONAR_PROJECT_KEY=${BRANCH_NAME}
        #   SONAR_PROJECT_NAME=${BRANCH_NAME}
        #   mvn sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.projectName="${SONAR_PROJECT_NAME}" -Dsonar.host.url=http://31.220.85.178:9001 -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.analysis.author=${{ github.actor }}
        # env:
        #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GLOBAL }}
